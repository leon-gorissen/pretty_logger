# This workflow will install Python dependencies, run tests, lint, build, and upload your package.
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
    tags: [ "*" ]  # Trigger on any tag push
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install docker-compose -y

    - name: Build and run tests
      run: docker-compose up -d --build pritty_logger_tests

    - name: Lint with flake8
      run: |
        docker-compose run pritty_logger_tests flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        docker-compose run pritty_logger_tests flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  publish:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.x

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install twine

    - name: Build package
      run: |
        python setup.py sdist bdist_wheel

    - name: Publish package
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*
